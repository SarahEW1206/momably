import React, { Component } from "react";
import PropTypes from "prop-types";
import { firestoreConnect } from "react-redux-firebase";
import styled from "styled-components";

const FormContainer = styled.div`
  width: 95%;
  max-width: 900px;
  margin: 50px auto;
`;

class SignUp extends Component {
  //Keeping this all here for now, but will likely split data between signup and account detail screens.
  state = {
    bizDesc: "",
    bizName: "",
    category: "",
    email: "",
    extURL: "",
    firstName: "",
    imgURL: "",
    lastName: "",
    password: "",
    phone: ""
  };

  onChange = e => this.setState({ [e.target.name]: e.target.value });

  onCreate = e => {
    e.preventDefault();
    const { firestore, firebase, history } = this.props;

    //Get items from state to use to set values in the create method below.

    const {
      bizDesc,
      bizName,
      category,
      email,
      extURL,
      firstName,
      imgURL,
      lastName,
      password,
      phone
    } = this.state;

    firebase
      .auth()
      .createUserWithEmailAndPassword(email, password)
      .then(user => {
        //Get the unique UID generated by firebase and use it to set the doc name.
        let user_id = user.user.uid;
        firestore
          .collection("users")
          .doc(user_id)
          .set({
            //These values will come from the state unless explicitly specified below.
            user_id: user_id,
            featured: true,
            bizDesc,
            bizName,
            category: "Business Category",
            email,
            extURL: "https://sassafrasbiz.com",
            firstName,
            imgURL: "https://picsum.photos/200/200",
            lastName,
            password,
            phone: "111-111-1111"
          })
          .then(() => history.push(`/edit/${user_id}`));
      })
      .catch(error => alert(error));
  };

  render() {
    return (
      <FormContainer>
        <p style={{ color: "red" }}>
          <em>Some text here reiterating value prop....</em>
        </p>
        <h1>Create Account</h1>
        <p style={{ color: "red" }}>
          <em>
            Make this a full signup form with all info including selector for
            category, etc.
          </em>
        </p>
        <form onSubmit={this.onCreate}>
          <div className="form-group">
            <label htmlFor="firstName">First Name</label>
            <input
              type="text"
              className="form-control"
              name="firstName"
              required
              value={this.state.firstName}
              onChange={this.onChange}
            />
          </div>

          <div className="form-group">
            <label htmlFor="lastName">Last Name</label>
            <input
              type="text"
              className="form-control"
              name="lastName"
              required
              value={this.state.lastName}
              onChange={this.onChange}
            />
          </div>
          <div className="form-group">
            <label htmlFor="bizName">Business Name</label>
            <input
              type="text"
              className="form-control"
              name="bizName"
              required
              value={this.state.bizName}
              onChange={this.onChange}
            />
          </div>

          <div className="form-group">
            <label htmlFor="bizDesc">Business Description</label>
            <textarea
              type="text"
              className="form-control"
              name="bizDesc"
              required
              value={this.state.bizDesc}
              onChange={this.onChange}
            />
          </div>

          <div className="form-group">
            <label htmlFor="email">Email</label>
            <input
              type="email"
              className="form-control"
              name="email"
              required
              value={this.state.email}
              onChange={this.onChange}
            />
          </div>

          <div className="form-group">
            <label htmlFor="password">Password</label>
            <input
              type="text"
              className="form-control"
              name="password"
              required
              value={this.state.password}
              onChange={this.onChange}
            />
          </div>

          <input
            type="submit"
            value="CREATE"
            className="btn btn-primary btn-block"
          />
        </form>
      </FormContainer>
    );
  }
}

SignUp.propTypes = {
  firebase: PropTypes.object.isRequired,
  firestore: PropTypes.object.isRequired
};

export default firestoreConnect()(SignUp);
